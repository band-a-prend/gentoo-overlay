# Partial upstream patches for new 'googletest' option from Cantera 2.4.0
# that alow to disable googletest:
# https://github.com/Cantera/cantera/commit/fb4a36b1ca84032704d55fa2baff8f48c980d1ac
# https://github.com/Cantera/cantera/commit/5c09fc5b27132fb5091f7f4866c621629b8cd45f
# https://github.com/Cantera/cantera/commit/333d388f90a8d318f3dadd0e70bdcf955e1ec7bb
diff -Naur old/SConstruct new/SConstruct
--- old/SConstruct	2017-01-13 06:28:53.000000000 +0300
+++ new/SConstruct	2018-08-28 01:23:19.000000000 +0300
@@ -496,8 +496,17 @@
     EnumVariable(
         'system_googletest',
         """Select whether to use gtest from system installation ('y'), from a
-           Git submodule ('n'), or to decide automatically ('default').""",
-        'default', ('default', 'y', 'n')),
+           Git submodule ('n'), or to decide automatically ('default').
+           Deprecated option, please use 'googletest' instead.
+           This option is supressed by 'googletest' option.""",
+        'unspecified', ('unspecified','default', 'y', 'n')),
+    EnumVariable(
+        'googletest',
+        """Select whether to use gtest from system installation ('system'),
+           from a Git submodule ('submodule'), to decide automatically ('default')
+           or don't look for gtest ('none') and don't run tests that depend on gtest.
+           If this option is set then it suppresses the deprecated 'system_googletest' option.""",
+        'default', ('default', 'system', 'submodule', 'none')),
     (
         'env_vars',
         """Environment variables to propagate through to SCons. Either the
@@ -823,16 +832,28 @@
                          'Try manually checking out the submodule with:\n\n'
                          '    git submodule update --init --recursive ext/fmt\n')
 
+# Convert setting of the deprecated system_googletest option
+if env['system_googletest'] != 'unspecified':
+    print("WARNING: The 'system_googletest' option is deprecated. "
+        "Use the 'googletest' option instead.")
+if env['system_googletest'] == 'default':
+    env['googletest'] = 'default'
+elif env['system_googletest'] == 'y':
+    env['googletest'] = 'system'
+elif env['system_googletest'] == 'n':
+    env['googletest'] = 'submodule'
+
 # Check for googletest and checkout submodule if needed
-if env['system_googletest'] in ('y', 'default'):
+if env['googletest'] in ('system', 'default'):
     if conf.CheckCXXHeader('gtest/gtest.h', '""'):
-        env['system_googletest'] = True
-    elif env['system_googletest'] == 'y':
+        env['googletest'] = 'system'
+        print("""INFO: Using system installation of Googletest""")
+    elif env['googletest'] == 'system':
         config_error('Expected system installation of Googletest, but it '
                      'could not be found.')
 
-if env['system_googletest'] in ('n', 'default'):
-    env['system_googletest'] = False
+if env['googletest'] in ('submodule', 'default'):
+    env['googletest'] = 'submodule'
     if not os.path.exists('ext/googletest/include/gtest/gtest.h'):
         if not os.path.exists('.git'):
             config_error('Googletest is missing. Install source in ext/googletest.')
@@ -846,6 +867,10 @@
             config_error('Googletest not found and submodule checkout failed.\n'
                          'Try manually checking out the submodule with:\n\n'
                          '    git submodule update --init --recursive ext/googletest\n')
+    print("""INFO: Using Googletest from Git submodule""")
+
+if env['googletest'] == 'none':
+    print("""INFO: Not using Googletest -- unable to run complete test suite""")
 
 # Check for Eigen and checkout submodule if needed
 if env['system_eigen'] in ('y', 'default'):
@@ -1583,6 +1608,8 @@
     print "*******************************************************"
     print "Compilation completed successfully.\n"
     print "- To run the test suite, type 'scons test'."
+    if env['googletest'] == 'none':
+        print("  WARNING: You set the 'googletest' to 'none' and all it's tests will be skipped.")
     if os.name == 'nt':
         print "- To install, type 'scons install'."
         print "- To create a Windows MSI installer, type 'scons msi'."
diff -Naur old/ext/SConscript new/ext/SConscript
--- old/ext/SConscript	2017-01-13 06:28:53.000000000 +0300
+++ new/ext/SConscript	2018-08-28 00:54:20.000000000 +0300
@@ -79,7 +79,7 @@
                            Copy('$TARGET', '$SOURCE')))
 
 # Google Test: Used internally for Cantera unit tests.
-if not env['system_googletest']:
+if env['googletest'] == 'submodule':
     localenv = prep_gtest(env)
     gtest = build(localenv.Library('../lib/gtest',
                                    source=['googletest/src/gtest-all.cc']))
diff -Naur old/test/SConscript new/test/SConscript
--- old/test/SConscript	2017-01-13 06:28:53.000000000 +0300
+++ new/test/SConscript	2018-08-31 00:28:16.000000000 +0300
@@ -14,10 +14,12 @@
 
 localenv.Prepend(CPPPATH=['#include'],
                  LIBPATH='#build/lib')
-if not env['system_googletest']:
-    localenv.Prepend(CPPPATH=['#ext/googletest/include'])
-localenv.Append(LIBS=['gtest'] + cantera_libs,
+localenv.Append(LIBS=cantera_libs,
                 CCFLAGS=env['warning_flags'])
+if env['googletest'] == 'submodule':
+    localenv.Prepend(CPPPATH=['#ext/googletest/include'])
+if env['googletest'] != 'none':
+    localenv.Append(LIBS=['gtest'])
 
 # Turn of optimization to speed up compilation
 ccflags = localenv['CCFLAGS']
@@ -81,11 +83,15 @@
     passedFile = File(pjoin(str(program[0].dir), '%s.passed' % program[0].name))
     PASSED_FILES[progName] = str(passedFile)
     testResults.tests[passedFile.name] = program
-    run_program = testenv.Command(passedFile, program, gtestRunner)
-    env.Depends(run_program, testenv.get('cantera_shlib', ()))
-    env.Depends(env['test_results'], run_program)
-    Alias('test-%s' % progName, run_program)
-    env['testNames'].append(progName)
+    if env['googletest'] != 'none':
+        run_program = testenv.Command(passedFile, program, gtestRunner)
+        env.Depends(run_program, env['build_targets'])
+        env.Depends(env['test_results'], run_program)
+        Alias('test-%s' % progName, run_program)
+        env['testNames'].append(progName)
+    else:
+        testResults.failed['test-%s (googletest disabled)' % progName] = 1
+
     if os.path.exists(passedFile.abspath):
         Alias('test-reset', testenv.Command('reset-%s%s' % (subdir, progName),
                                             [], [Delete(passedFile.abspath)]))
